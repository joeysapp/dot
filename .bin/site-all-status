# 2023-05-29 trying to conditionally lolcat them to show if they're up or down

# (site-pg-status 1; site-react-status 1; site-server-status 1) | awk '{ return $0,1 }'

if site-pg-status; then
   echo "$(site-pg-status 1)" | lolcat
else
   echo "$(site-pg-status 1)"
fi;


if site-react-status; then
   echo "$(site-react-status 1)" | lolcat
else
   echo "$(site-react-status 1)"
fi;


if site-server-status; then
   echo "$(site-server-status 1)" | lolcat
else
   echo "$(site-server-status 1)"
fi;



#     args           command and arguments
#     comm           command
#     command        command and arguments
#     cpu            short-term CPU usage factor (for scheduling)
#     etime          elapsed running time
#     flags          the process flags, in hexadecimal (alias f)
#     gid            processes group id (alias group)
#     inblk          total blocks read (alias inblock)
#     jobc           job control count
#     ktrace         tracing flags
#     ktracep        tracing vnode
#     lim            memoryuse limit
#     logname        login name of user who started the session
#     lstart         time started
#     majflt         total page faults
#     minflt         total page reclaims
#     msgrcv         total messages received (reads from pipes/sockets)
#     msgsnd         total messages sent (writes on pipes/sockets)
#     nice           nice value (alias ni)
#     nivcsw         total involuntary context switches
#     nsigs          total signals taken (alias nsignals)
#     nswap          total swaps in/out
#     nvcsw          total voluntary context switches
#     nwchan         wait channel (as an address)
#     oublk          total blocks written (alias oublock)
#     p_ru           resource usage (valid only for zombie)
#     paddr          swap address
#     pagein         pageins (same as majflt)
#     pgid           process group number
#     pid            process ID
#     ppid           parent process ID
#     pri            scheduling priority
#     prsna          persona
#     re             core residency time (in seconds; 127 = infinity)
#     rgid           real group ID
#     rss            resident set size
#     ruid           real user ID
#     ruser          user name (from ruid)
#     sess           session ID
#     sig            pending signals (alias pending)
#     sigmask        blocked signals (alias blocked)
#     sl             sleep time (in seconds; 127 = infinity)
#     start          time started
#     state          symbolic process state (alias stat)
#     svgid          saved gid from a setgid executable
#     svuid          saved UID from a setuid executable
#     tdev           control terminal device number
#     time           accumulated CPU time, user + system (alias cputime)
#     tpgid          control terminal process group ID
#     tsess          control terminal session ID
#     tsiz           text size (in Kbytes)
#     tt             control terminal name (two letter abbreviation)
#     tty            full name of control terminal
#     ucomm          name to be used for accounting
#     uid            effective user ID
#     upr            scheduling priority on return from system call (alias usrpri)
#     user           user name (from UID)
#     utime          user CPU time (alias putime)
#     vsz            virtual size in Kbytes (alias vsize)
#     wchan          wait channel (as a symbolic name)
#     wq             total number of workqueue threads
#     wqb            number of blocked workqueue threads
#     wqr            number of running workqueue threads
#     wql            workqueue limit status (C = constrained thread limit, T = total thread limit)
#     xstat          exit or stop status (valid only for stopped or zombie process)
#
#
