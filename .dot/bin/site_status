# 2023-05-28: Mostly a learning experience with zsh/gnu,
#             Could definitely be improved - pretty slow (probably because I'm evaling each ps >_>

site_status () {
    # FRONTEND_STATUS=eval ps -o tty,start,etime,pid,vsz,pcpu,pmem,args | grep '[npm] run start'
    # BACKEND_STATUS=eval ps -o tty,start,etime,pid,vsz,pcpu,pmem,args | grep '[nodemon] nodemon/server.js'

    LABEL="user\t\t pid\t %cpu %me vsize\t     rss   tt\t stat\t start  time\tcommand"
    # todo: printf "${1:=-}%.0s" {1..$CHAR_CT}; echo '';
    # user, pid, %cpu, %me, virtualsize, rss, tt, stat, start, time, command
    FRONTEND=$(
        eval ps auxww |
        grep '[npm] run start' |
        tr -s " " | cut -f $(printf "1,2,3,4,5,6,7,8,9,10,11-") -d " "
    )
    F_PROC_CT=$(echo $FRONTEND | ag '\n' | wc -l);
    if [[ "$FRONTEND" == *"npm run start"* ]];    
    then
        for i in $(seq 1 $F_PROC_CT)
        do
            # Handle two nodemon processes
            ID=$((i))
            IDX=''
            if [[ $ID > 1 ]];
            then IDX="[$ID]"; fi;
            F_PID=$(echo $FRONTEND | cut -f 2 -d " " | tr -s "\n" "," | cut -f $ID -d ",")
            F_START=$(echo $FRONTEND | cut -f 9 -d " " | tr -s "\n" ","  | cut -f $ID -d ",")
            F_UTIME=$(echo $FRONTEND | cut -f 10 -d " " | tr -s "\n" ","  | cut -f $ID -d ",")
            F_CMD=$(echo $FRONTEND | cut -f 11- -d " " | tr -s "\n" ","  | cut -f $ID -d ",")
            echo '  << Frontend'$IDX' online >> ('$F_PID') since ['$F_START'] with uptime '$F_UTIME | lolcat
        done;
    else
        echo '  << Frontend offline >>'
        echo ''
    fi;

    BACKEND=$(
        eval ps auxww |
        grep '[nodemon] nodemon/server.js' |
        tr -s " " | cut -f $(printf "1,2,3,4,5,6,7,8,9,10,11-") -d " "
    )
    # echo $BACKEND
    B_PROC_CT=$(echo $BACKEND | ag '\n' | wc -l);
    if [[ "$BACKEND" == *"nodemon nodemon/server.js"* ]];    
    then
        for i in $(seq 1 $B_PROC_CT)
        do
            # Handle two nodemon processes
            ID=$((i))
            B_PID=$(echo $BACKEND | cut -f 2 -d " " | tr -s "\n" "," | cut -f $ID -d ",")
            B_START=$(echo $BACKEND | cut -f 9 -d " " | tr -s "\n" ","  | cut -f $ID -d ",")
            B_UTIME=$(echo $BACKEND | cut -f 10 -d " " | tr -s "\n" ","  | cut -f $ID -d ",")
            B_CMD=$(echo $BACKEND | cut -f 11- -d " " | tr -s "\n" ","  | cut -f $ID -d ",")
            echo '  << Backend['$ID'] online >> ('$B_PID') since ['$B_START'] with uptime '$B_UTIME | lolcat
        done;
    else
        echo '  << Backend offline >> ->\n\tcd '$DBPATH'; nodemon backend/server.js'
        echo ''
    fi;
}
site_status