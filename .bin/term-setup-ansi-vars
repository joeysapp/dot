#!/bin/zsh

# Extending the built-in zsh `colors` function to have all color codes available
# ... but I don't think this works, compiled this into .terminfo/78.. either the : or ; version.
# so, use iTerm or just give up on 24bit colors

# also... todo... if you do this:
# $ terminfo xterm-256colors setaf=\E[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m,
# $ terminfo xterm-24bit     setaf=\E[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m,
# $ terminfo xterm-24bits    setaf=\E[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m,
# $ terminfo xterm-24        no setaf
# 
# https://notes.burke.libbey.me/ansi-escape-codes/
# https://en.wikipedia.org/wiki/ANSI_escape_code
# https://unix.stackexchange.com/questions/450365/check-if-terminal-supports-24-bit-true-color
# https://michurin.github.io/xterm256-color-picker/
# https://www.delftstack.com/howto/c/printf-align-columns-in-c/

local rc=m	\

emulate -L zsh
typeset -AHg FG BG

FG[reset]="\e[0$rc"
FG[bold]="\e[1$rc"
FG_BOLD="\e[1$rc"
for idx in $(seq 0 255); do
    FG[$idx]="\33[038;005;$idx$rc"
    BG[$idx]="\e[048;005;$idx$rc";
done
return

# [todo] http://rtfm.etla.org/xterm/ctlseq.html
# Set cursor to be v bright
# ... so confusing, so this works because it's a string (.. I think a Ps?)
# echo -ne "\033]012;rgb:6f/ff/6f\007"

# Set background to be purple
# echo -ne "\033]11;rgb:53/50/6f\007" 

# Set background back to black
# echo -ne "\033]011;rgb:00/00/00\007"

# Get the current value with ?
# printf '\033]11;?\007'
